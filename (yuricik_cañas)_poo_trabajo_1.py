# -*- coding: utf-8 -*-
"""(Yuricik Cañas) POO - Trabajo 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WIz-Q-n4L5RmFSaLlEvxGATL9uPAofn4

# 9 SEPT - Trabajo 1 (10%)
###Yuricik Cañas Quintero
###Programación Orientada a Objetos
###Prof. Arboleda Mazo Walter Hugo

Enlace al repositorio en Github:

https://github.com/ycanasq/my-first-blog/blob/0492589cd745149347401b0421e6dc91f4e72cd4/(Yuricik_Ca%C3%B1as)_POO_Trabajo_1.ipynb

##Ejercicio Resulto 1 (Punto 4)
"""

class Calculos:
  @staticmethod
  def calcular_edalber(edjuan):
    return 2 * (edjuan / 3)
  @staticmethod
  def calcular_edana(edjuan):
    return 4 * (edjuan / 3)
  @staticmethod
  def calcular_edmama(edjuan, edalber, edana):
    return edjuan + edalber + edana


def main():
  edjuan = int(input("Ingrese la edad de Juan: "))

  edalber = Calculos.calcular_edalber(edjuan)
  edana = Calculos.calcular_edana(edjuan)
  edmama = Calculos.calcular_edmama(edjuan, edalber, edana)

  print("LAS EDADES SON:")
  print("Alberto:", int(edalber))
  print("Juan:", edjuan)
  print("Ana:", int(edana))
  print("Mamá:", int(edmama))


if __name__ == "__main__":
  main()

"""##Ejercicio Resulto 2 (Punto 5)"""

class Calculos:
  @staticmethod
  def calcular_suma(suma, x):
    resultado_suma = suma + x
    return resultado_suma

  @staticmethod
  def calcular_x(x, y):
    resultado_x = x + (y ** 2)
    return resultado_x


def main():
  suma = float(input("Ingrese un número para suma: "))
  x = float(input("Ingrese un número para x: "))
  y = float(input("Ingrese un número para y: "))

  suma = Calculos.calcular_suma(suma, x)
  x = Calculos.calcular_x(x, y)

  suma = suma + (x / y)

  print("El valor de la suma es:", suma)


if __name__ == "__main__":
  main()

"""##Ejercicio Resuelto 3 (Punto 12)

"""

class Calculos:
  @staticmethod
  def calcular_salario_bruto(horas_laboradas, valor_hora):
    return horas_laboradas * valor_hora

  @staticmethod
  def calcular_porcentaje_retencion(retencion):
    return retencion / 100

  @staticmethod
  def calcular_valor_retencion_fuente(porcentaje_retencion, salario_bruto):
    return porcentaje_retencion * salario_bruto

  @staticmethod
  def calcular_salario_neto(salario_bruto, valor_retencion_fuente):
    return salario_bruto - valor_retencion_fuente


def main():
  horas_trabajadas = float(input("Ingresa un número para las horas trabajadas: "))
  valor_hora = float(input("Ingresa un número para el valor hora: "))
  retencion = float(input("Ingresa un número para la retencion: "))

  salario_bruto = Calculos.calcular_salario_bruto(horas_trabajadas, valor_hora)
  porcentaje_retencion = Calculos.calcular_porcentaje_retencion(retencion)
  valor_retencion_fuente = Calculos.calcular_valor_retencion_fuente(porcentaje_retencion, salario_bruto)
  salario_neto = Calculos.calcular_salario_neto(salario_bruto, valor_retencion_fuente)

  print("Salario Bruto:", salario_bruto)
  print("Valor retención en la fuente:", valor_retencion_fuente)
  print("Salario Neto:", salario_neto)


if __name__ == "__main__":
  main()

"""##Ejercicio Resuelto 4 (Punto 14)

"""

class Calculos:
  @staticmethod
  def calcular_cuadrado(numero):
    return numero ** 2

  @staticmethod
  def calcular_cubo(numero):
    return numero ** 3

def main():
  numero = float(input("Ingresa un número: "))

  cuadrado = Calculos.calcular_cuadrado(numero)
  cubo = Calculos.calcular_cubo(numero)

  print("Número:", numero)
  print("Cuadrado:", cuadrado)
  print("Cubo:", cubo)

if __name__ == "__main__":
  main()

"""##Ejercicio Resuelto 5 (Punto 17)"""

import math

class Calculos:
  @staticmethod
  def calcular_longitud_circunferencia(radio):
    return 2 * math.pi * radio

  @staticmethod
  def calcular_area_circulo(radio):
    return math.pi * (radio ** 2)


def main():
  radio = float(input("Ingresa un número para el radio: "))

  longitud_circunferencia = Calculos.calcular_longitud_circunferencia(radio)
  area_circulo = Calculos.calcular_area_circulo(radio)

  print("Longitud de la circunferencia:", longitud_circunferencia)
  print("Área del círculo:", area_circulo)



if __name__ == "__main__":
  main()